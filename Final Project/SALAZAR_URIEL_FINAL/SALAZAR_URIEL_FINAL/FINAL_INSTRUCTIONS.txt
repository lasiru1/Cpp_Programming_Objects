Final Project

Create a program that fulfills the requirements of the following prompt:

You will create a program that simulates a virtual airport. This simulation must
be able to do the following things:

Allow the user to dynamically create any number of aircraft to populate the
airport (airport starts with 0 aircraft)

Minimum of 5 different aircraft to create, each with unique properties

Aircraft, when created, should be sorted within their container according to a
random priority variable set at the time of the aircraft’s creation

Aircraft can take off from the airport in a queue

Must schedule 3 aircraft to take off at any time

Once 3 aircraft have been scheduled, the aircraft immediately take off

Aircraft can land
Only one aircraft can land at a time

The program should be driven by a menu that allows the user to perform the
following actions:

Create Aircraft
Launch Aircraft
Land Aircraft
Print what aircraft are on the ground
Print what aircraft are in the sky
Closes out the program

You will be creating a base class Aircraft with at least 5 derived classes for
different types of aircraft. Aircraft must contain at least one pure virtual
function.

All classes should have appropriate accessors and mutators.

Creation of aircraft must be done dynamically and stored with the use of
polymorphism in mind.

The container used should hold pointers to objects of type Aircraft.

The container must be able to be sized dynamically, as well.

Any single aircraft can only exist in one of two states: in the airport or in
the sky. An aircraft shouldn’t exist in both at any time.


Your program MUST contain:

The Aircraft class and 5 derived classes

Throw, Try, and Catch statements for anything that requires user input

If user inputs invalid arguments, protect the integrity of the data by not
completing the user’s actions and returning the user to a safe state

Dynamically sizing containers for your aircraft on the ground and in the air

A queue for letting the aircraft take off (between the states of on the ground
and in the air)

Member functions that allow you to access each data member correctly

Polymorphism approach for creating and working with the aircraft

A constructor for each class