(HugeInt Class)

A machine with 32-bit integers can represent integers in the range of
approximately –2 billion to +2 billion. This fixed-size restriction is rarely
troublesome, but there are applications in which we would like to be able to use
a much wider range of integers. This is what C++ was built to do, namely, create
powerful new data types.

Consider class HugeInt from figures 11.17 – 11.19. Study the class carefully,
then modify the program to perform the following tasks:

a) Overload the * multiplication operator.

b) Overload all the relational and equality operators.


[Note: We do not show an assignment operator or copy constructor for class
HugeInt, because the assignment operator and copy constructor provided by the
compiler are capable of copying the entire array data member properly.]